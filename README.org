#+title: Dotfiles

* Intro

你最好添加 =--depth=1= 這樣的選項（在克隆的時候）。

我现在在使用 Nix 作为包管理器,用得很爽。我停止使用 Homebrew 了。

我的 =$HOME= 目录结构是：

#+begin_example
  /Users/wu/Projects
  └── Repositories
      ├── FreeBSD
      │   └── src
      ├── Kernel.org
      │   └── dash
      ├── Learning
      │   └── Emacs
      ├── My
      │   ├── Blog
      │   ├── otfiles
      │   └── Practice
      ├── NixOS
      │   └── nixpkgs
      └── OpenBSD

  14 directories, 0 files
#+end_example

* zsh

我正在使用来自 grml 的 =.zshrc= ，搭配修改自 grml 的 =.zshrc.local= 。
当然了，仓库中还有个叫做 =.zshrc= 的文件。可别误会，这是我自己配置的，
而不是 grml 的，现在我只是偶尔更新一下，当作一个备用选项。

这里我摘录一下 grml 的安装建议（说明）：

#+begin_src  shell
  wget -O .screenrc     https://git.grml.org/f/grml-etc-core/etc/grml/screenrc_generic
  wget -O .tmux.conf    https://git.grml.org/f/grml-etc-core/etc/tmux.conf
  wget -O .vimrc        https://git.grml.org/f/grml-etc-core/etc/vim/vimrc
  wget -O .zshrc        https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
#+end_src

Grml's [[https://grml.org/console][Offical Website]].

* .emacs.d

我的 emacs 配置带有 vim 编辑器的按键绑定，使用了 evil 的方案。
我没有使用社区中比较流行的 use-package 或者 leaf.el ，而是选择了和 purcell 一样的方案 （实际上就是抄）。

** 关于主题

使用 modus-themes。

** 关于字体

在 macOS(即 Darwin) 上，我使用 Monoca 字体和 SF Mono 字体。

至于中文字体，用了 tumashu 的 cnfonts 来完成设置。

顺便提一下，我就是在 emacs 上用 pyim 写这份文件的，感谢 tumashu 同学的努力 :)

** 关于第三方的插件

我使用 git submodule 的方式管理第三方的包（也就是 non-elpa 的包）。
类似于这样的形式：

#+begin_src shell
  git submodule add git@github.com:tumashu/pyim.git
#+end_src

至于去更新这些 /site-lisp/ 需要这样：

#+begin_src shell
  git submodule update
#+end_src

如果没有在克隆仓库的时候添加 =--reverse= 的选项，那么你需要：

#+begin_src shell
  git submodule init
#+end_src

** Tips

善用 =pp-buffer= 以及 =imenu=, 相比 =consult-ripgrep=, =rg.el= 或许更加适合我。

* vim

抄袭 grml。

* KDE/Plasma

我以前是一个死忠的 gnome 用户。

但是现在，我已经无法再忍受 gnome 的一次次崩溃和错误，

所以, 我开始使用 KDE/Plasma 了。我使用的 Linux 发行版是 Gentoo Linux ，因为这个发行版的软件选择非常多。

至于内核就是主线内核，要么是加上了 ZFS 模块，要么是加上了 Xanmod 的 patch, 或者直接使用 gentoo-kernel-bin 这个二进制的内核。
